#!/bin/bash
##------------------------------------------------------------------------------
##
##        ██████╗██████╗  ██████╗██████╗ ███████╗ █████╗ ██████╗ ██╗   ██╗
##       ██╔════╝██╔══██╗██╔════╝██╔══██╗██╔════╝██╔══██╗██╔══██╗╚██╗ ██╔╝
##       ██║     ██████╔╝██║     ██████╔╝█████╗  ███████║██║  ██║ ╚████╔╝ 
##       ██║     ██╔═══╝ ██║     ██╔══██╗██╔══╝  ██╔══██║██║  ██║  ╚██╔╝  
##       ╚██████╗██║     ╚██████╗██║  ██║███████╗██║  ██║██████╔╝   ██║   
##        ╚═════╝╚═╝      ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝    ╚═╝   
##
##-----------------------------LICENSE NOTICE------------------------------------
##  This file is part of CPCReady Basic programation.
##  Copyright (C) 2024 Destroyer
##
##  This program is free software: you can redistribute it and/or modify
##  it under the terms of the GNU Lesser General Public License as published by
##  the Free Software Foundation, either version 3 of the License, or
##  (at your option) any later version.
##
##  This program is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU Lesser General Public License for more details.
##
##  You should have received a copy of the GNU Lesser General Public License
##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
##------------------------------------------------------------------------------

## Bash Include files
source $(dirname $0)/lib/library.sh

## Chequeamos si existe el archivo de variables.
## si no existe salimos con error
check_env_file

## Cargamos archivo de variables
source .cpc

## Function to display help message
show_help() {

    CPCREADY
    echo "Create disk image with project files."
    echo 
    echo "Use: $(basename "$0") [option]"
    echo "  -h, --help     Show this help message."
    echo "  -v, --version  Show version this software."
    echo "Option:"
    echo "  [parameter] Amstrad CPC Models. Options values [464,664,6128]."
    echo "              If the parameter is empty, shows the"
    echo "              current value."
    ready
    exit 0

}

## Check if the help parameter is provided
case $1 in
    -v|--version)
        show_version
        ready
        exit 0
        ;;
    -h|--help)
        show_help
        exit 0
        ;;
esac

## Crete folder out
mkdir -p "$OUT"

PRINT "TITLE" "Create disk image with project files."
## Create image disk
create_dsk $DISC
## Generate disk image for all files
if [ $# -eq 0 ]; then
    ## Add files BAS to disk image
    for archivo in "$IN_BAS"/*.BAS "$IN_BAS"/*.bas; do
        if [ -f "$archivo" ]; then
            file=$(basename "$archivo")
            PRINT "TAG" "$file"
            ## delete comments in bas files
            rm_comments "$archivo" "$OUT/$file"
            ## convert unix2dos
            unix2dos "$OUT/$file" >/dev/null 2>&1; PRINT "OK" "Converting file to DOS format." || PRINT "ERROR" "There was a problem converting the file to DOS format."
            ## add file to dsk image
            add_ascii_dsk $DISC "$OUT/$file"
            ## add amsdos header
            amsdos "$OUT/$file" >/dev/null 2>&1; PRINT "OK" "Added amsdos header to the file." || PRINT "ERROR" "There was an error adding the amsdos header to the file."
        fi
    done
## Generate disk image for a single file
else
    ## check if file exists
    if [ ! -e "$IN_BAS/$1" ]; then
        PRINT "ERROR" "$1 not found."
    fi
        file=$(basename "$1")
        PRINT "TAG" "$file"
        ## delete comments in bas files
        rm_comments "$IN_BAS/$1" "$OUT/$file"
        ## convert unix2dos
        unix2dos "$OUT/$file" >/dev/null 2>&1; PRINT "OK" "Converting file to DOS format." || PRINT "ERROR" "There was a problem converting the file to DOS format."
        ## add file to dsk image
        add_ascii_dsk $DISC "$OUT/$file"
        ## add amsdos header
        amsdos "$OUT/$file" >/dev/null 2>&1; PRINT "OK" "Added amsdos header to the file." || PRINT "ERROR" "There was an error adding the amsdos header to the file."
fi

# banner "Generated disk image successfully"
PRINT "TITLE" "Generated disk image successfully"

