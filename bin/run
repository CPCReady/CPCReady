#!/bin/bash
##------------------------------------------------------------------------------
##
##        ██████╗██████╗  ██████╗██████╗ ███████╗ █████╗ ██████╗ ██╗   ██╗
##       ██╔════╝██╔══██╗██╔════╝██╔══██╗██╔════╝██╔══██╗██╔══██╗╚██╗ ██╔╝
##       ██║     ██████╔╝██║     ██████╔╝█████╗  ███████║██║  ██║ ╚████╔╝ 
##       ██║     ██╔═══╝ ██║     ██╔══██╗██╔══╝  ██╔══██║██║  ██║  ╚██╔╝  
##       ╚██████╗██║     ╚██████╗██║  ██║███████╗██║  ██║██████╔╝   ██║   
##        ╚═════╝╚═╝      ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝    ╚═╝   
##
##-----------------------------LICENSE NOTICE------------------------------------
##  This file is part of CPCReady Basic programation.
##  Copyright (C) 2024 Destroyer
##
##  This program is free software: you can redistribute it and/or modify
##  it under the terms of the GNU Lesser General Public License as published by
##  the Free Software Foundation, either version 3 of the License, or
##  (at your option) any later version.
##
##  This program is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU Lesser General Public License for more details.
##
##  You should have received a copy of the GNU Lesser General Public License
##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
##------------------------------------------------------------------------------

## Bash Include files
source $(dirname "$0")/lib/library.sh

# Function to display help message
function show_help {

    CPCREADY
    echo "Run Files in Emulator"
    echo 
    echo "Use: $(basename "$0") [option]"
    echo "  -h, --help     Show this help message."
    echo "  -v, --version  Show version this software."
    echo "Option:"
    echo "  [parameter]  [M4, RVM]"
    ready
}

# Check if the help parameter is provided
case $1 in
    -v|--version)
        show_version
        ready
        exit 0
        ;;
    -h|--help)
        show_help
        exit 0
        ;;
esac

## Chequeamos si existe el archivo de variables.
## si no existe salimos con error
check_env_file

## Cargamos archivo de variables
source "$PATH_CONFIG_PROJECT/$CONFIG_CPCREADY"

## Show logo
CPCREADY

if [[ "$OSTYPE" == "linux-gnu" ]]; then
    CPCEMU="$CPCREADY/bin/linux/cpcemu/cpcemu"
    RVM="$CPCREADY/bin/linux/cpcemu/cpcemu"
elif [[ "$OSTYPE" == "darwin"* ]]; then
    CPCEMU="$CPCREADY/bin/osx/CPCemuMacOS.app/Contents/MacOS/CPCemuMacOS"
    RVM="$CPCREADY/bin/osx/rvm.app/Contents/MacOS/rvm"
else
    PRINT ERROR "$OSTYPE Operating system NOT supported."
fi

# Convertir el valor de $1 a minúsculas
param=$(echo "$1" | tr '[:upper:]' '[:lower:]')

# comprobamos si se pasa parametro 2 que es la imagen de disco
# si no se pasa se coge por defecto la variable $DISC
if [ -n "$2" ]; then
    IMAGE="$2"
else
    IMAGE="$DISC"
fi

# Comprobar si el valor es "m4" o "rvm"
if [[ "$param" == "m4" || "$param" == "rvm" ]]; then
    # Realizar acciones específicas para "m4" y "disc"
    if [[ "$param" == "m4" ]]; then
        model_cpc m4$MODEL
        PRINT "OK" "Emulator: CPCEmu."
        PRINT "OK" "Project execute in SD."
        $CPCEMU -f -c "$PWD/$PATH_CONFIG_PROJECT/$CONFIG_CPCEMU" > /dev/null 2>&1 &
    elif [[ "$param" == "rvm" ]]; then
        if [ ! -e "$OUT_DISC/$IMAGE" ]; then
            PRINT "ERROR" "$OUT_DISC/$IMAGE not found."
        fi
        model_cpc $MODEL
        PRINT "OK" "Emulator: RetroVirtualMachine."
        PRINT "OK" "DISC: $DISC"
        PRINT "OK" "run\"disc.bas"
        $RVM -b=cpc$MODEL -i "$OUT_DISC/$IMAGE" -c='run"disc\n' > /dev/null 2>&1 &
    fi    
else
   echo
   PRINT "ERROR" "Bad command"
fi

ready