#!/bin/bash
##------------------------------------------------------------------------------
##
##        ██████╗██████╗  ██████╗██████╗ ███████╗ █████╗ ██████╗ ██╗   ██╗
##       ██╔════╝██╔══██╗██╔════╝██╔══██╗██╔════╝██╔══██╗██╔══██╗╚██╗ ██╔╝
##       ██║     ██████╔╝██║     ██████╔╝█████╗  ███████║██║  ██║ ╚████╔╝ 
##       ██║     ██╔═══╝ ██║     ██╔══██╗██╔══╝  ██╔══██║██║  ██║  ╚██╔╝  
##       ╚██████╗██║     ╚██████╗██║  ██║███████╗██║  ██║██████╔╝   ██║   
##        ╚═════╝╚═╝      ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝    ╚═╝   
##
##-----------------------------LICENSE NOTICE------------------------------------
##  This file is part of CPCReady Basic programation.
##  Copyright (C) 2024 Destroyer
##
##  This program is free software: you can redistribute it and/or modify
##  it under the terms of the GNU Lesser General Public License as published by
##  the Free Software Foundation, either version 3 of the License, or
##  (at your option) any later version.
##
##  This program is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU Lesser General Public License for more details.
##
##  You should have received a copy of the GNU Lesser General Public License
##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
##------------------------------------------------------------------------------

## Bash Include files
source $(dirname "$0")/lib/library.sh

# Function to display help message
show_help() {
    
    CPCREADY
    echo "Create new CPCReady project."
    echo 
    echo "Use: $(basename "$0") [option]"
    echo "  -h, --help     Show this help message."
    echo "  -v, --version  Show version this software."
    ready
}

# Check if the help parameter is provided
case $1 in
    -v|--version)
        show_version
        ready
        exit 0
        ;;
    -h|--help)
        show_help
        exit 0
        ;;
esac

CPCREADY

PRINT "TITLE" "Create New Project."

if [ -e ./.cpc ]; then
    echo
    PRINT "ERROR" "The .cpc file exists in the current path."
    exit
fi

while true; do
    echo
    read -p "${BLUE}${BOLD}  Project's name: ${NORMAL}" project_name

    # Reemplazar espacios por guiones bajos
    project_name=${project_name// /_}

    if [[ -z "$project_name" ]]; then
        echo
        PRINT "ERROR_NO_EXIT" "The project name cannot be empty."
    elif [[ -d "./$project_name" ]]; then
        echo
        PRINT "ERROR_NO_EXIT" "A directory with the name '$project_name' already exists. Please choose another name."
    else
        break
    fi
done
while true; do
    read -p "${BLUE}${BOLD}  CPC Model (464, 6128, or 664): ${NORMAL}" cpc_model

    case $cpc_model in
        464|6128|664)
            break
            ;;
        *)
            echo
            PRINT "ERROR_NO_EXIT" "Invalid CPC Model. Please choose either 464, 6128, or 664."
            echo
            ;;
    esac
done

## Create the project directory
PRINT "TAG" "Directory"
mkdir -p "$project_name/$IN_BAS"
mkdir -p "$project_name/$OUT"
PRINT "OK" "Create the $project_name directory."

## Create Templates files
PRINT "TAG" "Template File"
cp -r "$CPCREADY/cfg/templates/MAIN.BAS" "$project_name/$IN_BAS/MAIN.BAS"
PRINT "OK" "Create template example MAIN.BAS file."

## Create configuration file
PRINT "TAG" "Configurations"
cp -r "$CPCREADY/cfg/templates/.cpc" "$project_name/.cpc"
change_model "$cpc_model" "$project_name"
change_disc "$project_name.dsk" "$project_name"
PRINT "OK" "Create configuration for the cpc model $cpc_model."

## Create image disk file
create_dsk "$project_name/$project_name.dsk"

PRINT "TITLE" "Project Created Successfully"
